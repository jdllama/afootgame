{"version":3,"sources":["core/Dropdown.js","core/Cell.js","core/Room.js","core/Obj.js","core/Main.js","index.js"],"names":["Dropdown","props","optBuilder","bind","handleChange","e","this","onDropdownChange","target","value","opts","i","push","id","type","initial","onChange","React","Component","Cell","row","col","setRoom","setObject","setWall","updateRoom","preventDefault","updateObject","whichWall","updateWall","color","cell","getCell","img","objectHeld","style","backgroundColor","className","onClick","stopPropagation","width","top","left","height","northWall","bottom","southWall","westWall","right","eastWall","src","Room","name","Obj","setObj","icon","genericCell","Main","buildMapData","buildCells","buildObjects","buildRooms","updateRows","updateCols","updateCell","updateCellRoom","updateCellObject","updateCellWall","setCurrentRoom","setCurrentObject","getSingleCell","buildJSON","returnData","j","state","mapData","cols","rows","roomType","objectType","newRows","setState","newCols","func","map","firstItem","innerRow","secondItem","innerCol","obj","myFake","forEach","console","log","JSON","stringify","click","objs","Object","keys","rooms","room","Container","fluid","Row","Col","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14a0062c.chunk.js","sourcesContent":["import React from 'react';\r\nexport default class Dropdown extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.optBuilder = this.optBuilder.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onDropdownChange(e.target.value);\r\n    }\r\n\r\n    optBuilder() {\r\n        let opts = [];\r\n        for(let i = 0;i<15;i++) {\r\n            opts.push(<option value={i + 1} id={i} key={i}>{i + 1}</option>)\r\n        }\r\n        return opts;\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <span>\r\n                <label>\r\n                    {this.props.type}\r\n                    <select value={this.props.initial} onChange={this.handleChange}>\r\n                        {this.optBuilder()}\r\n                    </select>\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Cell.css';\r\nexport default class Cell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.row = props.row;\r\n        this.col = props.col;\r\n        this.setRoom = this.setRoom.bind(this);\r\n        this.setObject = this.setObject.bind(this);\r\n        this.setWall = this.setWall.bind(this);\r\n    }\r\n\r\n    setRoom() {\r\n        this.props.updateRoom(this.row, this.col);\r\n    }\r\n\r\n    setObject(e) {\r\n        //onContextMenu={this.setObject}\r\n        e.preventDefault();\r\n        this.props.updateObject(this.row, this.col);\r\n    }\r\n\r\n    setWall(whichWall) {\r\n        this.props.updateWall(this.row, this.col, whichWall);\r\n    }\r\n    \r\n    render() {\r\n        let color = \"#FFFFFF\";\r\n        let cell = this.props.getCell(this.row, this.col);\r\n        let img = cell.objectHeld;\r\n        if(cell.type !== null) {\r\n            color = cell.type.color;\r\n        }\r\n        return (\r\n            <span style={{backgroundColor: color}} className=\"Cell\" onClick={this.setRoom}>\r\n                <span className=\"Wall\" onClick={(e) => {e.stopPropagation(); this.setWall(\"north\")}} style={{width: \"100%\", top: 0, left: 0, height: \"5px\", backgroundColor: cell.northWall === true ? \"black\" : \"\"}}></span>\r\n                <span className=\"Wall\" onClick={(e) => {e.stopPropagation(); this.setWall(\"south\")}} style={{width: \"100%\", bottom: 0, left: 0, height: \"5px\", backgroundColor: cell.southWall === true ? \"black\" : \"\"}}></span>\r\n                <span className=\"Wall\" onClick={(e) => {e.stopPropagation(); this.setWall(\"west\")}} style={{left: 0, top: 0, height: \"100%\", width: \"5px\", backgroundColor: cell.westWall === true ? \"black\" : \"\"}}></span>\r\n                <span className=\"Wall\" onClick={(e) => {e.stopPropagation(); this.setWall(\"east\")}} style={{right: 0, top: 0, height: \"100%\", width: \"5px\", backgroundColor: cell.eastWall === true ? \"black\" : \"\"}}></span>\r\n                <span>\r\n                    <img src={img} />\r\n                </span>\r\n            </span>\r\n        );\r\n\r\n    }\r\n}","import React from 'react';\r\nimport './Cell.css';\r\nexport default class Room extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setRoom = this.setRoom.bind(this);\r\n    }\r\n\r\n    setRoom() {\r\n        this.props.setRoom({color: this.props.color, name: this.props.name});\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.setRoom}>\r\n                <span className=\"Cell\" style={{backgroundColor: this.props.color}}></span>\r\n                {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Cell.css';\r\nexport default class Obj extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setObj = this.setObj.bind(this);\r\n    }\r\n\r\n    setObj() {\r\n        this.props.setObj({icon: this.props.icon, name: this.props.name});\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.setObj}>\r\n                <span className=\"Cell\"><img src={this.props.icon} /></span>\r\n                {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dropdown from \"./Dropdown\";\r\nimport Cell from \"./Cell\";\r\nimport Room from \"./Room\";\r\nimport Obj from \"./Obj\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction genericCell(row, col) {\r\n    return {\r\n        objectHeld: null,\r\n        type: null,\r\n        row: row,\r\n        col: col,\r\n        northWall: false,\r\n        southWall: false,\r\n        eastWall: false,\r\n        westWall: false,\r\n    }\r\n}\r\n\r\nexport class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const rows = 15;\r\n        const cols = 15;\r\n        this.buildMapData = this.buildMapData.bind(this);\r\n        this.buildCells = this.buildCells.bind(this);\r\n        this.buildObjects = this.buildObjects.bind(this);\r\n        this.buildRooms = this.buildRooms.bind(this);\r\n\r\n        this.updateRows = this.updateRows.bind(this);\r\n        this.updateCols = this.updateCols.bind(this);\r\n        this.updateCell = this.updateCell.bind(this);\r\n        this.updateCellRoom = this.updateCellRoom.bind(this);\r\n        this.updateCellObject = this.updateCellObject.bind(this);\r\n        this.updateCellWall = this.updateCellWall.bind(this);\r\n\r\n        this.setCurrentRoom = this.setCurrentRoom.bind(this);\r\n        this.setCurrentObject = this.setCurrentObject.bind(this);\r\n\r\n        this.getSingleCell = this.getSingleCell.bind(this);\r\n\r\n        this.buildJSON = this.buildJSON.bind(this);\r\n\r\n\r\n        let returnData = [];\r\n        for(var i = 0; i<rows;i++) {\r\n            let row = [];\r\n            for(var j = 0;j<cols;j++) {\r\n                row.push(genericCell(i, j));\r\n            }\r\n            returnData.push(row)\r\n        }\r\n        this.state = {\r\n            mapData: returnData,\r\n            cols: cols,\r\n            rows: rows,\r\n            roomType: null,\r\n            objectType: null,\r\n        }\r\n    }\r\n\r\n    updateRows(newRows) {\r\n        this.setState({rows: newRows, mapData: []}, () => {\r\n            this.buildMapData();\r\n        });\r\n    }\r\n\r\n    updateCols(newCols) {\r\n        this.setState({cols: newCols, mapData: []}, () => {\r\n            this.buildMapData();\r\n        });\r\n    }\r\n\r\n    updateCell(row, col, func) {\r\n        this.setState(state => {\r\n            let mapData = state.mapData.map((firstItem, innerRow) => {\r\n                if(innerRow === row) {\r\n                    return firstItem.map((secondItem, innerCol) => {\r\n                        if(innerCol === col) {\r\n                           secondItem = func({...secondItem});\r\n                        }\r\n\r\n                        return secondItem;\r\n                    });\r\n                }\r\n                else {\r\n                    return firstItem;\r\n                }\r\n            })\r\n            return {\r\n              mapData\r\n            }\r\n       });\r\n    }\r\n\r\n    setCurrentRoom(obj) {\r\n        const color = obj.color;\r\n        const name = obj.name;\r\n        let state = null;\r\n        if(name === \"Blank\") {\r\n            state = null;\r\n        }\r\n        else {\r\n            state = {\r\n                color: color,\r\n                name: name,\r\n            }\r\n        }\r\n\r\n        this.setState({roomType: state})\r\n    }\r\n\r\n    setCurrentObject(obj) {\r\n        const icon = obj.icon;\r\n        const name = obj.name;\r\n        let state = null;\r\n        if(name === \"Blank\") {\r\n            state = null;\r\n        }\r\n        else {\r\n            state = {\r\n                icon: icon,\r\n                name: name,\r\n            }\r\n        }\r\n\r\n        this.setState({objectType: state})\r\n    }\r\n\r\n    updateCellObject(row, col) {\r\n        this.updateCell(row, col, (cell) => {\r\n            cell.objectHeld = this.state.objectType;\r\n            return cell;\r\n        });\r\n    }\r\n\r\n    updateCellRoom(row, col) {\r\n        this.updateCell(row, col, (cell) => {\r\n            cell.type = this.state.roomType;\r\n            return cell;\r\n        });\r\n    }\r\n\r\n    updateCellWall(row, col, whichWall) {\r\n        this.updateCell(row, col, (cell) => {\r\n            //cell.type = this.state.roomType;\r\n            if(whichWall === \"north\") {\r\n                cell.northWall = !cell.northWall;\r\n            }\r\n            else if(whichWall === \"south\") {\r\n                cell.southWall = !cell.southWall;\r\n            }\r\n            else if(whichWall === \"west\") {\r\n                cell.westWall = !cell.westWall;\r\n            }\r\n            else if(whichWall === \"east\") {\r\n                cell.eastWall = !cell.eastWall;\r\n            }\r\n            return cell;\r\n        });\r\n    }\r\n\r\n    getSingleCell(row, col) {\r\n        let myFake = null;\r\n        this.state.mapData.forEach((firstItem, innerRow) => {\r\n            if(innerRow === row) {\r\n                return firstItem.forEach((secondItem, innerCol) => {\r\n                    if(innerCol === col) {\r\n                        myFake = {...secondItem};\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        return myFake;\r\n    }\r\n\r\n    buildJSON() {\r\n        console.log(JSON.stringify(this.state.mapData));\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    buildMapData() {\r\n        let returnData = [];\r\n        for(var i = 0; i<this.state.rows;i++) {\r\n            let row = [];\r\n            for(var j = 0;j<this.state.cols;j++) {\r\n                row.push(genericCell(i, j));\r\n            }\r\n            returnData.push(row)\r\n        }\r\n        this.setState({mapData: returnData});\r\n    }\r\n\r\n    buildCells() {\r\n        return this.state.mapData.map((row) => {\r\n            return <div>{row.map((cell) => {\r\n                return <Cell click={this.updateCellRoom} key={cell.row + \" \" + cell.col}  row={cell.row} col={cell.col} getCell={this.getSingleCell}/>\r\n            })}</div>\r\n        })\r\n    }\r\n\r\n    buildObjects() {\r\n        let objs = {\r\n            \"Blank\": {\r\n                icon: null,\r\n            },\r\n            \"Camera\": {\r\n                icon: null,\r\n            }\r\n        }\r\n        return Object.keys(objs).map(obj => {\r\n            return <Obj name={obj} icon={objs[obj].icon} setObj={this.setCurrentObject}/>\r\n        })\r\n    }\r\n\r\n    buildRooms() {\r\n        let rooms = {\r\n            \"Blank\": {\r\n                color: \"#FFFFFF\",\r\n            },\r\n            \"Hallway\": {\r\n                color: \"lightgray\",\r\n            },\r\n            \"Room 1\": {\r\n                color: \"#7209B7\",\r\n            },\r\n            \"Room 2\": {\r\n                color: \"#D7263D\",\r\n            },\r\n            \"Room 3\": {\r\n                color: \"#08A4BD\",\r\n            },\r\n            \"Room 4\": {\r\n                color: \"#33673B\",\r\n            },\r\n            \"Room 5\": {\r\n                color: \"#FF9F1C\",\r\n            },\r\n            \"Main Room\": {\r\n                color: \"#FDF0D5\",\r\n            },\r\n            \"Security\": {\r\n                color: \"#4C4C4C\",\r\n            },\r\n        }\r\n        return Object.keys(rooms).map(room => {\r\n            //return null;\r\n            return <Room name={room} color={rooms[room].color} setRoom={this.setCurrentRoom} />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Dropdown key=\"1\" type=\"rows\" initial={this.state.rows} onDropdownChange={this.updateRows}/>\r\n                        <br />\r\n                        <Dropdown key=\"2\" type=\"cols\" initial={this.state.cols} onDropdownChange={this.updateCols}/>\r\n                        <br />\r\n                        <button onClick={this.buildJSON}>Build JSON</button><br />\r\n                        <fieldset>\r\n                            <legend>\r\n                                Room Types\r\n                            </legend>\r\n                            {this.buildRooms()}\r\n                        </fieldset>\r\n                            \r\n                        \r\n                        <fieldset>\r\n                            <legend>\r\n                                Objects\r\n                            </legend>\r\n                            {this.buildObjects()}\r\n                        </fieldset>\r\n                    </Col>\r\n                    <Col>\r\n                        {\r\n                            this.state.mapData.map(row => {\r\n                                return <div>{row.map(cell => {\r\n                                    let key = cell.row + \" \" + cell.col;\r\n                                    return <Cell updateRoom={this.updateCellRoom} updateWall={this.updateCellWall} updateObject={this.updateCellObject} key={key} row={cell.row} col={cell.col} getCell={this.getSingleCell}/>\r\n                                })}</div>\r\n                            })\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport {Main} from \"./core/Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}